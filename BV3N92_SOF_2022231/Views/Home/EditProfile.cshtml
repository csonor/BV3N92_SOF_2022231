@using Backend.Helpers
@using Microsoft.AspNetCore.Identity
@model EditSiteUser
@inject UserManager<SiteUser> _usermanager

@{
	ViewData["Title"] = "Edit Profile";
	var currentuser = await _usermanager.GetUserAsync(User);
	var picCount = currentuser.Pictures.Count;
	var picsAllowed = 9 - picCount;
}

<h1>Edit your profile</h1>

<hr />

<div class="col d-flex justify-content-center">
	<form asp-controller="Home" asp-action="EditProfile" method="post" enctype="multipart/form-data">
		<div asp-validation-summary="All" class="text-danger"></div>
		<div class="form-group">
			<label asp-for="FirstName" class="control-label"></label>
			<input asp-for="FirstName" class="form-control" />
			<span asp-validation-for="FirstName" class="text-danger"></span>
		</div>
		<div class="form-group">
			<label asp-for="Age" class="control-label"></label>
			<input asp-for="Age" class="form-control" />
			<span asp-validation-for="Age" class="text-danger"></span>
		</div>

		<div class="form-group">
			<label asp-for="Bio" class="control-label"></label>
			<textarea asp-for="Bio" class="form-control"></textarea>
			<span asp-validation-for="Bio" class="text-danger"></span>
		</div>
		<br />
		<div class="p-3 mb-2 bg-info text-white">I Am a </div>
		<br />
		@foreach (var value in Enum.GetValues(typeof(Gender)))
		{
			<div class="form-check">

				<input class="form-check-input" type="radio" asp-for="Gender" value="@((int)value)" checked="@((int)value == (int)Model.Gender )" />
				<label class="text-white" asp-for="Gender">@value</label>
			</div>
		}
		<br />
		<div class="p-3 mb-2 bg-info text-white">My Sexual Orientation is</div>

		@foreach (var value in Enum.GetValues(typeof(Orientation)))
		{
			<div class="form-check">
				<input class="form-check-input" type="radio" asp-for="Orientation" value="@((int)value)" checked="@((int)value == (int)Model.Orientation)" />
				<label class="text-white" asp-for="Orientation">@value</label>
			</div>
		}

		<br />
		<div class="p-3 mb-2 bg-info text-white">My Best Pic (Profil Picture)</div>
		<br />
		<br />
		<div class="container">
			<div class="picture-container">
				<div class="picture">
					<img src="@Model.ProfilePictureUrl" class="picture-src" id="image-preview" title="">
					<input type="file" id="image-input" class="" name="profilePicture" asp-for="ProfilePicture" accept=".jpg,.jpeg,.png">
				</div>
				<h6 class="">Choose Picture</h6>
			</div>
		</div>
		<br />
		<div class="col d-flex justify-content-center">
			<h1 style="color:white">My Pictures</h1>
		</div>
		<br />
		<div class="col d-flex justify-content-center">
			@foreach (var picture in currentuser.Pictures)
			{
				<div class="card" style="width:10rem; height:fit-content; border-width:2px; margin:10px; object-fit: fill;">
					<img id="customImage-preview" class="card-img-top" src="@picture.PhotoUrl" alt="Card image cap">
					@Html.ActionLink("Delete Picture", "DeletePicture", "Home", new { id = picture.PictureId },  new { @class="btn btn-warning", onclick="return confirm('Are you sure you want to delete this picture')" })
				</div>
			}
		</div>
		@if (picsAllowed > 0)
		{
			<label class="text-white">Upload pictures (Max @picsAllowed)</label>
			<input class="text-white" type="file" onchange="checkFilesCount(this)" id="formFileMultiple" asp-for="UserPictures" multiple accept=".jpg,.jpeg,.png">
		}
		<br />
		<div class="form-group">
			<button id="editSubmit" type="submit" class="w-100 btn btn-lg btn-primary">Save</button>
		</div>
	</form>
</div>

<div>
	<a class="text-white" asp-action="Profile">Back to your profile</a>
</div>

@section Scripts {
	@{
		await Html.RenderPartialAsync("_ValidationScriptsPartial");
	}
	<script>
		function checkFilesCount(id) {
			if (id.files.length > @picsAllowed) {
				alert('@picsAllowed pictures allowed maximum');
				document.getElementById("formFileMultiple").value = "";
			}
		}

		document.getElementById("customImage-input").addEventListener("change", function () {
			var file = this.files[0];
			var reader = new FileReader();
			reader.onloadend = function () {
				document.getElementById("customImage-preview").src = reader.result;
			}
			reader.readAsDataURL(file);
		});
		document.getElementById("image-input").addEventListener("change", function () {
			var file = this.files[0];
			var reader = new FileReader();
			reader.onloadend = function () {
				document.getElementById("image-preview").src = reader.result;
			}
			reader.readAsDataURL(file);
		});

	</script>
}