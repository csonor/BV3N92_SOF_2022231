@using Microsoft.AspNetCore.Identity
@model UserManager<SiteUser>
@inject SignInManager<SiteUser> SignInManager
@inject UserManager<SiteUser> UserManager

@{
	var currentUser = await UserManager.GetUserAsync(User);
	var likedUsers = UserManager.Users
		.AsEnumerable()
        .Where(u => u.LikedUsers.Any(l => l.WhoLikedId == currentUser.Id))
        .ToList();
	
}
<body>
	<header>
		<nav class="navbar navbar-expand-lg navbar-light">
			<div class="container-fluid">
				<h1>
					<a class="btn-link text-white" asp-area="" asp-controller="Home" asp-action="Index">UniSex</a>
				</h1>
				<button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target=".navbar-collapse" aria-controls="navbarSupportedContent"
						aria-expanded="false" aria-label="Toggle navigation">
					<span class="navbar-toggler-icon"></span>
				</button>
				<div class="navbar-collapse collapse d-sm-inline-flex justify-content-between">
					<ul class="navbar-nav flex-grow-1">
						<li class="nav-item">
							<a class="nav-link text-white" asp-area="" asp-controller="Home" asp-action="Profile">Profile</a>
						</li>
						<li class="nav-item">
							<a class="nav-link text-white" asp-area="" asp-controller="Home" asp-action="Match">Match</a>
						</li>
						<li class="nav-item">
							<a class="nav-link text-white" asp-area="" asp-controller="Home" asp-action="Chat">Chat</a>
						</li>
						@if (SignInManager.IsSignedIn(User) && await UserManager.IsInRoleAsync(await UserManager.GetUserAsync(User), "Admin"))
						{
							<li class="nav-item">
								<a class="nav-link text-danger" asp-area="" asp-controller="Admin" asp-action="ManageAll">Admin Control Panel</a>
							</li>
						}
					</ul>
					<partial name="_LoginPartial" />
				</div>
			</div>
		</nav>
	</header>


	<h1>@ViewData["Title"]</h1>
<h1 class="text-white">Premium Likes</h1>
<p class="text-white">Check who likes you</p>


<ul>
	@foreach (var user in likedUsers)
	{
		<li style="float: left; list-style-type: none; margin:10px">
			<div class="card" style="width: 18rem; background-color:darkgoldenrod">
				<img class="card-img-top" src="@user.ProfilePictureUrl" alt="Card image cap" style="width:100px; height:100px; border:none;">
				<div class="card-body">
					<h5 class="card-title text-white">@user.FirstName</h5>
					<h7 class="card-title text-white">@user.Age</h7>
					<h7 class="card-title text-white">@user.Orientation</h7>
					<h7 class="card-title text-white">@user.Gender</h7>
					@*@if (await UserManager.IsInRoleAsync(user, "Admin"))
					{
						<a href="/Admin/RemoveAdminRights?userId=@user.Id" class="btn btn-warning">Remove Admin Rights</a>
					}
					else
					{
						<a href="/Admin/GrantAdminRights?userId=@user.Id" class="btn btn-success">Grant Admin Rights</a>
					}*@
					@*<br />
					<br />
					@Html.ActionLink("Delete Profil", "DeleteUser", "Admin", new { userId = user.Id },  new { @class="btn btn-danger", onclick="return confirm('Are you sure you want to delete this user?')" })*@
				</div>
			</div>

		</li>
	}
</ul>
</body>