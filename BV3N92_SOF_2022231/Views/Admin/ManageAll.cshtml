@model UserManager<SiteUser>
@using Microsoft.AspNetCore.Identity
@inject SignInManager<SiteUser> SignInManager
@inject UserManager<SiteUser> UserManager

@{
    ViewData["Title"] = "Manage Profiles";
    var currentUser = await UserManager.GetUserAsync(User);
}
<body>

    <header>
        <nav class="navbar navbar-expand-lg navbar-light">
            <div class="container-fluid">
                <h1>
                    <a class="btn-link text-white" asp-area="" asp-controller="Home" asp-action="Index">UniSex</a>
                </h1>
                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target=".navbar-collapse" aria-controls="navbarSupportedContent"
                        aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="navbar-collapse collapse d-sm-inline-flex justify-content-between">
                    <ul class="navbar-nav flex-grow-1">
                        <li class="nav-item">
                            <a class="nav-link text-white" asp-area="" asp-controller="Home" asp-action="Profile">Profile</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link text-white" asp-area="" asp-controller="Home" asp-action="Match">Match</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link text-white" asp-area="" asp-controller="Home" asp-action="Chat">Chat</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link text-white" asp-area="" asp-controller="Home" asp-action="Bonus">Bonuses</a>
                        </li>

                        @if (SignInManager.IsSignedIn(User) && await UserManager.IsInRoleAsync(await UserManager.GetUserAsync(User), "PremiumUser"))
                        {
                            <li class="nav-item">
                                <a class="nav-link text-warning" asp-area="" asp-controller="PremiumUser" asp-action="PremiumLikes">Likes (Premium)</a>
                            </li>
                        }
                    </ul>
                    <partial name="_LoginPartial" />
                </div>
            </div>
        </nav>
    </header>
    
    <h1>@ViewData["Title"]</h1>


    <ul>
        @foreach (var user in Model.Users.Where(x => currentUser.Id != x.Id))
        {
            <li style="float: left; list-style-type: none; margin:10px">
                <div class="card" style="width: 18rem; background-color:black">
                    <img class="card-img-top" src="@user.ProfilePictureUrl" alt="Card image cap" style="width:100px; height:100px; opacity:0.70; border:none;">
                    <div class="card-body">
                        <h5 class="card-title text-white">@user.FirstName</h5>
                        <h7 class="card-title text-white">@user.Id</h7>
                        @if (await UserManager.IsInRoleAsync(user, "Admin"))
                        {
                            <a href="/Admin/RemoveAdminRights?userId=@user.Id" class="btn btn-warning">Remove Admin Rights</a>
                        }
                        else
                        {
                            <a href="/Admin/GrantAdminRights?userId=@user.Id" class="btn btn-success">Grant Admin Rights</a>
                        }
                        <br />
                        <br />
                        @if (await UserManager.IsInRoleAsync(user, "PremiumUser"))
                        {
                            <a href="/Admin/RemovePremiumRights?userId=@user.Id" class="btn btn-warning">Remove Premium Rights</a>
                        }
                        else
                        {
                            <a href="/Admin/GrantPremiumRights?userId=@user.Id" class="btn btn-success">Grant Premium Rights</a>
                        }
                        <br />
                        <br />
                        @Html.ActionLink("Delete Profil", "DeleteUser", "Admin", new { userId = user.Id },  new { @class="btn btn-danger", onclick="return confirm('Are you sure you want to delete this user?')" })
                    </div>
                </div>

            </li>
        }
    </ul>
</body>

@section Scripts {
    <script src="~/js/signalr/dist/browser/signalr.js"></script>
    <script>
        $(function () {
            var connection = new signalR.HubConnectionBuilder().withUrl("/userEvents").build();

            connection.on("userCreated", function () {
                location.reload();
            });

            connection.on("userModified", function () {
                location.reload();
            });

            connection.on("userDeleted", function () {
                location.reload();
            });

            connection.start().catch(function (err) {
                return console.error(err.toString());
            });
        });
    </script>
}